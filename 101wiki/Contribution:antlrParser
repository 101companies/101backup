== Headline ==

Processing textual syntax with semantic actions of [[Technology:ANTLR]].
== Characteristics ==

An [[Technology:ANTLR]]-based parser for a concrete syntax of companies is provided. The underlying grammar is LL(1). The parser uses semantics actions to implement [[Feature:Total]].
== Illustration ==

The data model is implemented as plain textual files:

<fragment url="inputs/sample.Company"/>

A Parser for [[Feature:Company]] will be generated by [[Technology:ANTLR]] using src/main/antlr/Company.g.

A Company is defined by:

<syntaxhighlight language="antlr">
company :
  'company' STRING '{' department* '}' EOF;
  
department :
  'department' STRING '{' 
    'manager' employee
    ('employee' employee)* 
    department*
  '}';

employee :
  STRING '{'
    'address' STRING
    'salary' FLOAT 
    { total += Double.parseDouble($FLOAT.text); }
  '}';

STRING  :   '"' (~'"')* '"';
FLOAT   :   ('0'..'9')+ ('.' ('0'..'9')+)?;
WS      :   (' '|'\r'? '\n'|'\t')+ {skip();};
</syntaxhighlight>

[[Feature:Parsing]] is implemented using the generated Parser:

<fragment url="src/main/java/org/softlang/company/features/Parsing.java"/>

[[Feature:Total]] is implemented as part of [[Feature:Parsing]] with a semantic action (see Company.g):

<syntaxhighlight lang="antlr">
employee :
  STRING '{'
    'address' STRING
    'salary' FLOAT 
    { total += Double.parseDouble($FLOAT.text); }
  '}';
</syntaxhighlight>

<fragment url="src/main/java/org/softlang/company/features/Total.java/class/Total/method/total"/>

Test cases are implemented for all [[Namespace:Feature]]s. There is also an invalid input:

<fragment url="inputs/nonSample.Company"/>
== Relationships ==

This contribution shows [[Feature:Parsing]] with semantic actions using [[Technology:ANTLR]] and [[Language:Java]]

For plain syntax checking see [[Contribution:antlrAcceptor]].

For a basic example of lexing/tokenization see [[Contribution:antlrLexer]].

For [[Object-Text mapping]] with [[Technology:ANTLR]] see [[Contribution:antlrObjects]].

For walking a parsed [[Feature:Company]]-tree with [[Technology:ANTLR]] see [[Contribution:antlrTrees]].
== Architecture ==
The contribution follows a standardized structure:
* inputs contains input files for tests
* src/main/antlr contains grammar files for [[Technology:ANTLR]].
* src/main/java contains the following packages:
** org.softlang.company.features for implementations of [[Functional requirements]].
** org.softlang.company.antlr for [[Technology:ANTLR]]-generated Java classes (post build).
* src/test/java contains the following packages:
** org.softlang.company.tests for [[Technology:JUnit]] test cases.
== Usage ==
This contribution uses [[Technology:Gradle]] for building. [[Technology:Eclipse]] is supported.

See https://github.com/101companies/101simplejava/blob/master/README.md
== Metadata ==
* [[implements::Feature:Hierarchical company]]
* [[implements::Feature:Parsing]]
* [[implements::Feature:Total]]
* [[instanceOf::Theme:ANTLR]]
* [[instanceOf::Theme:Java mapping]]
* [[uses::Language:Java]]
* [[uses::Technology:ANTLR]]
* [[uses::Technology:JUnit]]
* [[uses::Technology:Gradle]]

* [[developedBy::Contributor:Ralf LÃ¤mmel]]
* [[instanceOf::Namespace:Contribution]]